/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
import java.awt.Color;
import java.util.*;
import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.JList;
import javax.swing.DefaultListModel;
import javax.swing.ListSelectionModel;
/**
 *
 * @author Jonas
 */
public class MusicPlayerGui extends javax.swing.JFrame implements MusicPlayerListener
 {
    private MusicPlayer p;
    private JFileChooser fileC;
    private int pop;
    private boolean mouse;
    private LinkedList<File> playList;
    private String favorit;
    private boolean favoritIsSet;
    private int position;
    private int oldPositionP;
    private int gain;
    private int oldgain;
    private boolean playListUsed;
    private int next;
    private boolean soundOn = true;
    private File datei;
    private File favoritFile;
    private DefaultListModel<String> items;
    
    
    public MusicPlayerGui() {
        favoritFile = null;
        items = new DefaultListModel<String>();
        datei = null;
        int next = 0;
        oldgain = 100;
        gain = 100;
        oldPositionP = 0;
        position = 0;
        playList = new LinkedList<File>(); 
        mouse = false;
        pop = 0;
        p = new MusicPlayer();
        p.addListener(this);
        fileC = new JFileChooser();
        favorit = "";
        favoritIsSet = false;
        getContentPane().setBackground(Color.black);
        initComponents();
        items = new DefaultListModel<String>();
        PlayListList.setModel(items);
//        items.addElement("Hi, I'm TheTreibelGuy");
//        items.addElement("and welcome to Laura's Ass");
        p.setGain(gain);
        PlayListList.setSelectionMode( ListSelectionModel.SINGLE_SELECTION);
        pack();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
 

    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jTabbedPane6 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        fastrewButton = new javax.swing.JButton();
        playResumeButton = new javax.swing.JButton();
        stopButton = new javax.swing.JButton();
        fastForwardButton = new javax.swing.JButton();
        positionSlider = new javax.swing.JSlider();
        positionProgressBar = new javax.swing.JProgressBar();
        volumeLabel = new javax.swing.JLabel();
        soundButton = new javax.swing.JButton();
        playListButton = new javax.swing.JButton();
        setButton = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        BirthdayButton = new javax.swing.JButton();
        FavoritFile = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        PlayListList = new javax.swing.JList();
        jLabel2 = new javax.swing.JLabel();

        jButton1.setText("jButton1");

        jButton2.setText("jButton2");

        jTabbedPane6.addTab("tab1", jPanel3);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("MP3Player");
        setAutoRequestFocus(false);
        setBackground(new java.awt.Color(0, 0, 0));
        setBounds(new java.awt.Rectangle(0, 0, 0, 0));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setFont(new java.awt.Font("Aramis", 3, 18)); // NOI18N
        setForeground(new java.awt.Color(0, 0, 0));
        setPreferredSize(new java.awt.Dimension(800, 321));
        setResizable(false);
        addMouseWheelListener(new java.awt.event.MouseWheelListener() {
            public void mouseWheelMoved(java.awt.event.MouseWheelEvent evt) {
                formMouseWheelMoved(evt);
            }
        });
        getContentPane().setLayout(null);

        fastrewButton.setBackground(new java.awt.Color(0, 0, 0));
        fastrewButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Action-arrow-blue-double-right-icon.png"))); // NOI18N
        fastrewButton.setOpaque(false);
        fastrewButton.setBackground(new Color(0,0,0,0));
        fastrewButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fastrewButtonActionPerformed(evt);
            }
        });
        getContentPane().add(fastrewButton);
        fastrewButton.setBounds(300, 230, 60, 60);

        playResumeButton.setBackground(new java.awt.Color(0, 0, 0));
        playResumeButton.setOpaque(false);
        playResumeButton.setBackground(new Color(0,0,0,0));
        playResumeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Play-icon.png"))); // NOI18N
        playResumeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playResumeButtonActionPerformed(evt);
            }
        });
        getContentPane().add(playResumeButton);
        playResumeButton.setBounds(370, 230, 60, 60);

        stopButton.setBackground(new java.awt.Color(0, 0, 0));
        stopButton.setOpaque(false);
        stopButton.setBackground(new Color(0,0,0,0));
        stopButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Stop-icon.png"))); // NOI18N
        stopButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopButtonActionPerformed(evt);
            }
        });
        getContentPane().add(stopButton);
        stopButton.setBounds(510, 230, 60, 60);

        fastForwardButton.setBackground(new java.awt.Color(0, 0, 0));
        fastForwardButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Action-arrow.png"))); // NOI18N
        fastForwardButton.setOpaque(false);
        fastForwardButton.setBackground(new Color(0,0,0,0));
        fastForwardButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fastForwardButtonActionPerformed(evt);
            }
        });
        getContentPane().add(fastForwardButton);
        fastForwardButton.setBounds(440, 230, 60, 60);

        positionSlider.setMajorTickSpacing(1);
        positionSlider.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        positionSlider.setOpaque(false);
        positionSlider.setBackground(new Color(0,0,0,0));
        positionSlider.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                positionSliderMouseClicked(evt);
            }
        });
        getContentPane().add(positionSlider);
        positionSlider.setBounds(0, 180, 800, 40);

        positionProgressBar.setBackground(new java.awt.Color(0, 0, 0));
        positionProgressBar.setForeground(new java.awt.Color(0, 0, 0));
        positionProgressBar.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                positionProgressBarStateChanged(evt);
            }
        });
        getContentPane().add(positionProgressBar);
        positionProgressBar.setBounds(0, 180, 800, 40);

        volumeLabel.setForeground(new java.awt.Color(255, 255, 255));
        volumeLabel.setText("100");
        getContentPane().add(volumeLabel);
        volumeLabel.setBounds(730, 230, 30, 20);

        soundButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Status-audio-volume-high-icon.png"))); // NOI18N
        soundButton.setOpaque(false);
        soundButton.setBackground(new Color(0,0,0,0));
        soundButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                soundButtonActionPerformed(evt);
            }
        });
        getContentPane().add(soundButton);
        soundButton.setBounds(730, 230, 60, 60);

        playListButton.setBackground(new java.awt.Color(0, 0, 0));
        playListButton.setOpaque(false);
        playListButton.setBackground(new Color(0,0,0,0));
        playListButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Add-icon.png"))); // NOI18N
        playListButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                playListButtonMouseClicked(evt);
            }
        });
        playListButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playListButtonActionPerformed(evt);
            }
        });
        getContentPane().add(playListButton);
        playListButton.setBounds(230, 230, 60, 57);

        setButton.setBackground(new java.awt.Color(0, 0, 0));
        setButton.setOpaque(false);
        setButton.setBackground(new Color(0,0,0,0));
        setButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Music-icon (2).png"))); // NOI18N
        setButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setButtonActionPerformed(evt);
            }
        });
        getContentPane().add(setButton);
        setButton.setBounds(20, 10, 161, 162);

        jButton3.setOpaque(false);
        jButton3.setBackground(new Color(0,0,0,0));
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/play-icon (2).png"))); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3);
        jButton3.setBounds(710, 120, 50, 33);

        BirthdayButton.setBackground(new java.awt.Color(0, 0, 0));
        BirthdayButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Downloads-icon.png"))); // NOI18N
        BirthdayButton.setOpaque(false);
        BirthdayButton.setBackground(new Color(0,0,0,0));
        BirthdayButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BirthdayButtonActionPerformed(evt);
            }
        });
        getContentPane().add(BirthdayButton);
        BirthdayButton.setBounds(200, 10, 160, 160);

        FavoritFile.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Burn-icon.png"))); // NOI18N
        FavoritFile.setOpaque(false);
        FavoritFile.setBackground(new Color(0,0,0,0));
        FavoritFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FavoritFileActionPerformed(evt);
            }
        });
        getContentPane().add(FavoritFile);
        FavoritFile.setBounds(380, 10, 160, 160);

        PlayListList.setBackground(new java.awt.Color(0, 0, 0));
        PlayListList.setForeground(new java.awt.Color(255, 255, 255));
        PlayListList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Song1" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(PlayListList);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(560, 10, 210, 160);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Black Background1.jpg"))); // NOI18N
        getContentPane().add(jLabel2);
        jLabel2.setBounds(0, 0, 800, 300);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void positionChanged(int newPosition)
    {
        if(newPosition == 99)
        {
            next++;
            if(playListUsed && playList.get(next) != null)
            {
                p.open(playList.get(next).getAbsolutePath());
                p.play();
            }
            else
            {
            p.stop();
            pop = 1;
            playResumeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Refresh-icon.png")));
            }
        }
       positionProgressBar.setValue(newPosition);
    }
    
    private void stopButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopButtonActionPerformed
        p.stop();
        playResumeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Play-icon.png")));
        positionProgressBar.setValue(0);
        pop = 1;
    }//GEN-LAST:event_stopButtonActionPerformed

    private void fastForwardButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fastForwardButtonActionPerformed
      p.fastForward();
    }//GEN-LAST:event_fastForwardButtonActionPerformed

    private void fastrewButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fastrewButtonActionPerformed
     p.rewind();
    }//GEN-LAST:event_fastrewButtonActionPerformed

    private void playResumeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playResumeButtonActionPerformed
        if(pop != 0)
        {
            if(pop == 1)
            {
                p.play();
                pop = 2;
                playResumeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pause-icon.png")));
            }
            else if(pop == 2)
            {
                p.pause();
                pop = 3;
                playResumeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Play-icon.png")));
            }
            else if(pop == 3)
            {
                p.resume();
                pop = 2;
                playResumeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pause-icon.png")));
            }
        }
    }//GEN-LAST:event_playResumeButtonActionPerformed

   
    private void positionProgressBarStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_positionProgressBarStateChanged
//       if(positionProgressBar.getValue() == 100)
//       {
//           p.stop();
//           if(playl.get(1) != null)
//           {
//               p.open(playl.get(1).getAbsolutePath());
//           }
//       }
    }//GEN-LAST:event_positionProgressBarStateChanged

    private void positionSliderMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_positionSliderMouseClicked
        int w = this.getWidth();
        System.out.println(w);      
        int x = evt.getX();
        System.out.println(x);
        double newPosition = 100.0/(double)this.getWidth()*evt.getX();
        System.out.println(newPosition);
        p.seek((int)newPosition);
    }//GEN-LAST:event_positionSliderMouseClicked
    
    private void gainChanged()
    {
        if(gain > 66)
            soundButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Status-audio-volume-high-icon.png")));
        else if(gain > 33)
            soundButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Status-audio-volume-medium-icon.png")));
        else if(gain > 0)
            soundButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Status-audio-volume-low-icon.png")));
        else
            soundButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Status-audio-volume-muted-icon.png")));
    }
    
    private void formMouseWheelMoved(java.awt.event.MouseWheelEvent evt) {//GEN-FIRST:event_formMouseWheelMoved
        gain -= (evt.getWheelRotation()*2);
        if (gain > 100)
            gain = 100;
        else if(gain < 0)
            gain = 0;
        volumeLabel.setText(String.valueOf(gain));
        oldgain = gain;
        soundOn = false;
        gainChanged();
        p.setGain(gain);
    }//GEN-LAST:event_formMouseWheelMoved

    private void playListButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playListButtonActionPerformed
        int returnVal = fileC.showOpenDialog(MusicPlayerGui.this);
        if (returnVal == JFileChooser.APPROVE_OPTION)
        {
            File datei = fileC.getSelectedFile();
            if(datei != null)
            {
                if(playList.isEmpty())
                {
                p.open(datei.getAbsolutePath());
                }
                items.addElement(datei.getName());
                playList.add(datei);
                pop = 1;
                playListUsed = true;
//                for(int i = 0; i < next; i++)
//                {
//                    System.out.println(playList.get(next).getAbsolutePath());
//                }
            }
        }
    }//GEN-LAST:event_playListButtonActionPerformed

    private void soundButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_soundButtonActionPerformed
        if(soundOn)
        {
            p.setGain(0);
            oldgain = gain;
            gain = 0;
            soundOn = false;
            volumeLabel.setText(String.valueOf(gain));
            gainChanged();
        }
        else
        {
            gain = oldgain;
            p.setGain(gain);
            soundOn = true;
            volumeLabel.setText(String.valueOf(gain));
            gainChanged();
        }
    }//GEN-LAST:event_soundButtonActionPerformed

    private void playListButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_playListButtonMouseClicked
                int returnVal = fileC.showOpenDialog(MusicPlayerGui.this);
        if (returnVal == JFileChooser.APPROVE_OPTION)
        {
            p.stop();
            File datei = fileC.getSelectedFile();
            playList.add(datei);
            if(playList.isEmpty())
            {
            p.open(datei.getAbsolutePath());
            }
            pop = 1;
            next++;
            playListUsed = true;
        }
    }//GEN-LAST:event_playListButtonMouseClicked

    private void setButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setButtonActionPerformed
        int returnVal = fileC.showOpenDialog(MusicPlayerGui.this);
        if (returnVal == JFileChooser.APPROVE_OPTION)
        {
            File datei = fileC.getSelectedFile();
            p.open(datei.getAbsolutePath());
            if(datei != null)
            {
                items.removeAllElements();
                items.addElement(datei.getName());
                playList.add(datei);
                pop = 1;
                playListUsed = true;
            }
        }
    }//GEN-LAST:event_setButtonActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        p.open(playList.get(PlayListList.getSelectedIndex()).getAbsolutePath());
        next = PlayListList.getSelectedIndex();
        p.play();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void FavoritFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FavoritFileActionPerformed
        int returnVal = fileC.showOpenDialog(MusicPlayerGui.this);
        if (returnVal == JFileChooser.APPROVE_OPTION)
        {
            favoritFile = fileC.getSelectedFile();
        }
    }//GEN-LAST:event_FavoritFileActionPerformed

    private void BirthdayButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BirthdayButtonActionPerformed
                if(favoritFile != null)
            {
                if(playList.isEmpty())
                {
                p.open(favoritFile.getAbsolutePath());
                pop = 1;
                }
                else
                playList.add(favoritFile);
                items.addElement(favoritFile.getName());
                pop = 1;
                playListUsed = true;
//                for(int i = 0; i < next; i++)
//                {
//                    System.out.println(playList.get(next).getAbsolutePath());
//                }
            }
    }//GEN-LAST:event_BirthdayButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MusicPlayerGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MusicPlayerGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MusicPlayerGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MusicPlayerGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
            new MusicPlayerGui().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BirthdayButton;
    private javax.swing.JButton FavoritFile;
    private javax.swing.JList PlayListList;
    private javax.swing.JButton fastForwardButton;
    private javax.swing.JButton fastrewButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane6;
    private javax.swing.JButton playListButton;
    private javax.swing.JButton playResumeButton;
    private javax.swing.JProgressBar positionProgressBar;
    private javax.swing.JSlider positionSlider;
    private javax.swing.JButton setButton;
    private javax.swing.JButton soundButton;
    private javax.swing.JButton stopButton;
    private javax.swing.JLabel volumeLabel;
    // End of variables declaration//GEN-END:variables
}
